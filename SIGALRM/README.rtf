{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww12980\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs36 \cf2 \expnd0\expndtw0\kerning0
Write a program in C or C++ to display periodically the CPU time consumed by your program and that by the kernel on behalf of your program.\
\
Your program should contain a for loop that adds numbers from 0 to max, where maxis set initially to 1000000.Your program may use a variable called counter (initialized to 0) to compute the sum. After the for loop is iterated 1000000 times, the counter is reinitialized to 0 and max is set to either 1000000, 2000000, or 3000000, determined using the random number generator library function. For example, if the random number generated is 0, then maxis set to 1000000, if the random number generated is 1, then maxis set to 2000000, and so on.The for loop is then restarted using max determined above.\
\
Your program should be able to display the CPU time consumed by the program (in seconds at microsecond level) and that by the kernel on behalf of the program (in seconds at microsecond level) every 2 seconds. In other words, your program should be interrupted by the SIGALRM signal every 2 seconds (i.e.the real time that has elapsed). When this happens, the signal will be trapped to a signal handler that stops the timer, displays to the screen the CPU time consumed by the program and that by the kernel on behalf of the program, and then sets the timer back to 2 seconds. Note that the alarm() and sleep() functions are NOT allowed for this program.\
}